---
import { Image } from "astro:assets"
import Layout from "../../layouts/Layout.astro"

import typescript from "./../../images/tech/typescript.svg"
import astro from "./../../images/tech/astro.svg"
import threejs from "./../../images/tech/threejs.svg"
import sass from "./../../images/tech/sass.svg"
import gsap from "./../../images/tech/gsap.svg"

import playgroundMain from "./../../images/projects/page-images/playground/main.jpg"
import playgroundJigsaw from "./../../images/projects/page-images/playground/jigsaw.jpg"
import playgroundBoard from "./../../images/projects/page-images/playground/board.jpg"
import playgroundCards from "./../../images/projects/page-images/playground/cards.jpg"
import Carousel from "../../components/Carousel.astro"

import "@fontsource/roboto/500.css"
import "@fontsource/roboto/700.css"
import "@fontsource/roboto/900.css"
import "@fontsource/merriweather/700.css"
import "@fontsource/merriweather/900.css"

const playgroundSlides = [
  playgroundMain,
  playgroundJigsaw,
  playgroundBoard,
  playgroundCards,
]

const tech = [
  {
    name: "Typescript",
    url: "https://www.typescriptlang.org",
    image: typescript,
  },
  {
    name: "Astro",
    url: "https://docs.astro.build/getting-started/",
    image: astro,
  },
  {
    name: "ThreeJS",
    url: "https://threejs.org/docs/index.html#manual/en/introduction/Installation",
    image: threejs,
  },
  {
    name: "SASS",
    url: "https://sass-lang.com/documentation/",
    image: sass,
  },
  {
    name: "GSAP",
    url: "https://gsap.com/docs/v3/",
    image: gsap,
  },
]
---

<Layout title="Проект: The Playground" lang="ru">
  <main>
    <section class="info">
      <div class="intro">
        <a class="back" href="/ru">&#10094;&#10094; Назад</a>
        <h1>The Playground</h1>
        <div class="links" transition:name={`The Playground-links`}>
          <a href="#"> &#10095;&#10095; Прямая ссылка</a>
          <a href="#"> &#10095;&#10095; Репозиторий на GitHub</a>
        </div>
        <div class="description" transition:name="The Playground-description">
          <p>
            В процессе разработки. В настоящее время этот веб-сайт только
            демонстрирует различные анимации, но я планирую превратить эти
            анимации в интерактивные игры.
          </p>
          <h2>Особенности проекта:</h2>
          <ul>
            <li>WebGL 3D-анимации (с использованием ThreeJS и GSAP)</li>
            <li>
              Быстрый и относительно легкий благодаря мета-фреймворку Astro.
            </li>
            <li>Развернут на Vercel</li>
          </ul>
        </div>
      </div>
      <Carousel title="The Playground" images={playgroundSlides} />
    </section>

    <section class="tech">
      <ul transition:name="The Playground-tech">
        {
          tech.map((item) => (
            <li>
              <a href={item.url} title={item.name} target="_blank">
                <Image src={item.image} alt={item.name} loading="lazy" />
                <p>{item.name}</p>
              </a>
            </li>
          ))
        }
      </ul>
    </section>
  </main>
</Layout>

<style lang="scss">
  main {
    display: grid;
    min-height: 90vh;

    color: var(--text-primary);
    font-family: Roboto, sans-serif;

    padding: 0 2rem;

    gap: var(--gap-xxl);
  }

  h1 {
    font-size: var(--font-size-fluid-3);
    font-weight: var(--font-weight-9);
    line-height: var(--font-lineheight-0);

    font-family: "Merriweather", serif;
  }

  .info {
    display: grid;
    @media screen and (min-width: 1024px) {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  .intro {
    display: grid;

    align-items: start;
    align-content: start;

    margin-top: var(--gap-xxl);

    color: var(--text-primary);
    h1 {
      margin-bottom: var(--gap-s);
    }

    .back {
      justify-self: start;

      font-size: var(--font-size-fluid-1);
      font-weight: var(--font-weight-9);
      color: var(--text-secondary);

      background-color: var(--bg);
      border: none;
      padding: 0.75rem;

      cursor: pointer;
    }
    .links {
      display: flex;
      gap: var(--gap-l);

      margin-bottom: var(--gap-xl);

      a {
        padding: 1em;
        min-width: 9rem;

        text-align: center;

        border: solid 1px var(--bg-button);

        border-radius: 0.5rem;

        box-shadow: var(--shadow-2);

        transition:
          color 200ms,
          scale 150ms;
        &:hover {
          color: var(--text-secondary);
        }

        &:active {
          scale: 0.95;
        }
      }
    }

    .description {
      padding-left: var(--gap-s);
      font-size: var(--font-size-1);
      font-weight: var(--font-weight-5);
      line-height: var(--font-lineheight-4);

      max-inline-size: 60ch;

      p {
        margin-bottom: var(--gap-l);
        color: var(--text-secondary);
      }
      h2 {
        font-size: var(--font-size-fluid-1);
      }

      ul {
        display: grid;
        gap: var(--gap-xs);
        padding-left: var(--gap-m);
        max-inline-size: 60ch;

        li {
          list-style: inside;
        }
      }
    }
  }

  .tech {
    display: grid;
    gap: 2rem;
    font-family: Roboto, sans-serif;

    margin-bottom: var(--gap-xxl);
    ul {
      display: grid;
      grid-template-columns: repeat(auto-fit, var(--size-fluid-7));
      grid-template-rows: repeat(auto-fit, var(--size-fluid-7));
      gap: var(--gap-xl);
      justify-content: center;
      align-items: center;
      justify-items: center;

      @media screen and (max-width: 1024px) {
        grid-template-columns: repeat(3, var(--size-fluid-7));
      }

      @media screen and (max-width: 480px) {
        grid-template-columns: repeat(2, var(--size-fluid-7));
      }

      li {
        --_transition: 200ms;
        a {
          display: grid;
          justify-items: center;
          gap: var(--gap-xs);
          width: var(--size-fluid-7);
          aspect-ratio: 1;

          box-shadow: var(--shadow-2);

          padding: 0.5em;

          border-radius: 5px;

          transition: scale var(--_transition);

          p {
            font-size: var(--font-size-fluid-0);
            transition: scale var(--_transition);
          }
          img {
            width: var(--size-fluid-5);
            aspect-ratio: 1;
            transition: scale var(--_transition);
          }

          &:hover {
            scale: 0.9;
          }
          &:active {
            scale: 0.85;
          }
          &:hover p,
          &:hover img {
            scale: 1.1;
          }

          &:active p,
          &:active img {
            scale: 1.15;
          }
        }
      }
    }
  }
</style>
