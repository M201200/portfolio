---
import { Image } from "astro:assets"

import "@fontsource/roboto/500.css"
import "@fontsource/roboto/900.css"

type Props = {
  title: string
  image: ImageMetadata
  siteLink: string
  githubLink: string
  tech: {
    name: string
    image: ImageMetadata
  }[]
  description: string
  flip?: boolean
}

const { title, image, siteLink, githubLink, tech, description, flip } =
  Astro.props
---

<div class="card">
  <Image class:list={["card_image", { right: flip }]} src={image} alt={title} />
  <div class:list={[{ left: flip }]}>
    <h2>
      {title}
    </h2>
    <ul>
      {
        tech.map((item) => (
          <li>
            <Image src={item.image} alt={item.name} loading="lazy" />
            <p>{item.name}</p>
          </li>
        ))
      }
    </ul>
    <a href={siteLink}> &#10095;&#10095; Live link</a>
    <a href={githubLink}> &#10095;&#10095; Github repo</a>
    <p>{description}</p>
  </div>
</div>

<style lang="scss">
  .card {
    padding: 1rem;
    display: grid;
    gap: 4rem;
    font-family: Roboto, sans-serif;

    &_image {
      border-radius: 1rem;
      box-shadow: var(--shadow-2);
      width: 100%;

      transition: scale 300ms;
      &:hover {
        scale: 1.05;
      }
    }

    div {
      display: grid;
      align-content: start;
      gap: 1rem;
    }
    h2 {
      font-size: var(--font-size-fluid-2);
      font-weight: var(--font-weight-9);
      line-height: var(--font-lineheight-0);
      padding-left: 1rem;
    }
    a {
      justify-self: start;

      color: var(--stone-11);
      text-decoration: none;
      padding: 0.25rem;

      transition: color 100ms;

      font-size: var(--font-size-3);
      font-weight: var(--font-weight-5);
      &:hover {
        color: var(--stone-8);
      }
    }

    ul {
      display: flex;
      flex-wrap: wrap;
      gap: 0 1.5rem;
      padding-left: 1rem;

      li {
        display: flex;
        gap: 0.5rem;
        align-items: center;

        img {
          width: var(--size-fluid-2);
          aspect-ratio: 1;
        }

        p {
          font-size: var(--font-size-fluid-0);
          font-weight: var(--font-weight-4);
        }
      }
    }

    p {
      font-size: var(--font-size-1);
      font-weight: var(--font-weight-5);
      line-height: var(--font-lineheight-4);

      color: var(--stone-10);

      padding: 1rem 0;

      max-width: 70ch;
    }

    @media screen and (min-width: 1024px) {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media screen and (min-width: 1024px) {
    .right {
      grid-column: 2/-1;
      grid-row: 1/2;
    }

    .left {
      grid-column: 1/2;
      grid-row: 1/2;
    }
  }
</style>
